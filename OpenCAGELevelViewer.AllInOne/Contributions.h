#pragma once

#include <imgui.h>
#include <string>
#include <string_view>
#include <utility>
#include <vector>

namespace OpenCAGELevelViewer {
	namespace AllInOne {
		namespace Contributions {
			class License {
			public:
				virtual const std::string &getLicenseText() const = 0;
			};

			class RawLicense : public License {
			private:
				std::string license {};
			public:
				RawLicense(const std::string &_license) {
					license = _license;
				}
				const std::string &getLicenseText() const {
					return license;
				}
			};

			class MITLicense : public License {
			private:
				std::string license;
			public:
				MITLicense(const std::string &author, const std::string &year) {
					license = std::string() +
						R"(Copyright (c) )" + year + " " + author + "\n\n" // no + here on purpose
						R"(Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.)";
				}
				const std::string &getLicenseText() const {
					return license;	
				}
			};

			class BSLLicense10 : public License {
			private:
				std::string license;
			public:
				BSLLicense10() {
					license = R"(Boost Software License - Version 1.0 - August 17th, 2003

Permission is hereby granted, free of charge, to any person or organization
obtaining a copy of the software and accompanying documentation covered by
this license (the "Software") to use, reproduce, display, distribute,
execute, and transmit the Software, and to prepare derivative works of the
Software, and to permit third-parties to whom the Software is furnished to
do so, all subject to the following:

The copyright notices in the Software and this entire statement, including
the above license grant, this restriction and the following disclaimer,
must be included in all copies of the Software, in whole or in part, and
all derivative works of the Software, unless such copies or derivative
works are solely in the form of machine-executable object code generated by
a source language processor.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.)";
				}
				const std::string &getLicenseText() const {
					return license;
				}
			};

			enum ZLibStatus {
				NONE,
				NO_CHANGES,
				MODIFIED
			};

			class ZLibLicense : public License {
			private:
				std::string license;
			public:
				ZLibLicense(const std::string &author, const std::string &year, const ZLibStatus zLibStatus = ZLibStatus::NONE) {
					license = std::string() +
						R"(Copyright (C) )" + year + " " + author + "\n\n"
						R"(This software is provided 'as-is', without any express or implied
warranty.  In no event will the authors be held liable for any damages
arising from the use of this software.

Permission is granted to anyone to use this software for any purpose,
including commercial applications, and to alter it and redistribute it
freely, subject to the following restrictions:
  
1. The origin of this software must not be misrepresented; you must not
   claim that you wrote the original software. If you use this software
   in a product, an acknowledgment in the product documentation would be
   appreciated but is not required. 
2. Altered source versions must be plainly marked as such, and must not be
   misrepresented as being the original software.
3. This notice may not be removed or altered from any source distribution.)";

					switch (zLibStatus) {
						case ZLibStatus::NO_CHANGES:
							license += "\n\n\n[(No changes have been made from the original software.)]";
							break;
						case ZLibStatus::MODIFIED:
							license += "\n\n\n[(Changes have been made from the original software.)]";
							break;
						default:
							break;
					}
				}
				const std::string &getLicenseText() const {
					return license;
				}
			};

			struct LibraryContributionFinal {
				const std::string_view library {};
				const std::string &license {};
			};

			//constexpr char cathodeAuthor[] = "Matt Filer";
			//constexpr char cathodeYear[] = "2020";

			const std::vector < LibraryContributionFinal > getLibraryContributions() {
				//constexpr MITLicense < cathodeAuthor, cathodeYear > test {};

				static std::vector < std::pair < const char *, License * > > libraryContributions {
					{"CATHODELib", new MITLicense("Matt Filer", "2020")},

					{"ImGui", new MITLicense("Omar Cornut", "2014-2025")},

					{"cryptopp", new BSLLicense10()},

					{"assimp", new RawLicense(R"(Open Asset Import Library (assimp)

Copyright (c) 2006-2025, assimp team
All rights reserved.

Redistribution and use of this software in source and binary forms,
with or without modification, are permitted provided that the
following conditions are met:

* Redistributions of source code must retain the above
  copyright notice, this list of conditions and the
  following disclaimer.

* Redistributions in binary form must reproduce the above
  copyright notice, this list of conditions and the
  following disclaimer in the documentation and/or other
  materials provided with the distribution.

* Neither the name of the assimp team, nor the names of its
  contributors may be used to endorse or promote products
  derived from this software without specific prior
  written permission of the assimp team.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.



******************************************************************************

AN EXCEPTION applies to all files in the ./test/models-nonbsd folder.
These are 3d models for testing purposes, from various free sources
on the internet. They are - unless otherwise stated - copyright of
their respective creators, which may impose additional requirements
on the use of their work. For any of these models, see
<model-name>.source.txt for more legal information. Contact us if you
are a copyright holder and believe that we credited you inproperly or
if you don't want your files to appear in the repository.


******************************************************************************)")},

					{"Poly2Tri", new RawLicense(R"(Poly2Tri Copyright (c) 2009-2010, Poly2Tri Contributors
http://code.google.com/p/poly2tri/

All rights reserved.
Redistribution and use in source and binary forms, with or without modification,
are permitted provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice,
  this list of conditions and the following disclaimer.
* Redistributions in binary form must reproduce the above copyright notice,
  this list of conditions and the following disclaimer in the documentation
  and/or other materials provided with the distribution.
* Neither the name of Poly2Tri nor the names of its contributors may be
  used to endorse or promote products derived from this software without specific
  prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.)")},

					{"glbinding", new MITLicense("Computer Graphics Systems Group at the Hasso-Plattner-Institute, Digital Engineering Company, University of Potsdam and CG Internals, Germany.", "2014-2023")},

					{"glm (MIT)", new MITLicense("G-Truc Creation", "2005")},

					{"nlohmann-json", new MITLicense("Niels Lohmann", "2013-2025")},
					
					{"SDL3", new ZLibLicense("Sam Lantinga <slouken@libsdl.org>", "1997-2025", ZLibStatus::NO_CHANGES)},

					{"Proggy (Font)", new MITLicense("Tristan Grimmer", "2004, 2005")}
				};

				std::vector < LibraryContributionFinal > libraryContributionFinals {};

				for (const auto &libraryContribution : libraryContributions) {
					libraryContributionFinals.push_back({libraryContribution.first, dynamic_cast < License * >(libraryContribution.second)->getLicenseText()});
				}

				return libraryContributionFinals;
			}

			inline void renderLicenses() {
				static const std::vector < LibraryContributionFinal > licenses = getLibraryContributions();

				for (const LibraryContributionFinal &license : licenses) {
					if (ImGui::CollapsingHeader(license.library.data())) {
						ImGui::TextWrapped(license.license.data());
					}
				}
			}
		}
	}
}